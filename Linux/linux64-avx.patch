diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index 29c284ee01947..518b6bb272190 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -509,10 +509,10 @@ config("compiler") {
   # Linux/Android/Fuchsia common flags setup.
   # ---------------------------------
   if (is_linux || is_chromeos || is_android || is_fuchsia) {
-    asmflags += [ "-fPIC" ]
-    cflags += [ "-fPIC" ]
-    ldflags += [ "-fPIC" ]
-    rustflags += [ "-Crelocation-model=pic" ]
+    asmflags += [ "-fPIC", "-w", ]
+    cflags += [ "-fPIC", "-w", ]
+    ldflags += [ "-fPIC", "-w", ]
+    rustflags += [ "-Crelocation-model=pic", "-Awarnings", ]
 
     if (!is_clang) {
       # Use pipes for communicating between sub-processes. Faster.
@@ -573,13 +573,13 @@ config("compiler") {
     # (https://crbug.com/829795).
     cflags += [ "-fmerge-all-constants" ]
 
-    if (!use_sized_deallocation) {
+    # if (!use_sized_deallocation) {
       if (is_win) {
         cflags += [ "/Zc:sizedDealloc-" ]
       } else {
-        cflags += [ "-fno-sized-deallocation" ]
+        cflags += [ "-fsized-deallocation" ]
       }
-    }
+    # }
 
     if (diagnostics_print_source_range_info && !is_win) {
       cflags += [ "-fdiagnostics-print-source-range-info" ]
@@ -634,14 +634,14 @@ config("compiler") {
     if (default_toolchain != "//build/toolchain/cros:target" &&
         !llvm_android_mainline) {
       cflags += [
-        "-mllvm",
-        "-split-threshold-for-reg-with-hint=0",
+        # "-mllvm",
+        # "-split-threshold-for-reg-with-hint=0",
       ]
       if (use_thin_lto && is_a_target_toolchain) {
         if (is_win) {
-          ldflags += [ "-mllvm:-split-threshold-for-reg-with-hint=0" ]
+          # ldflags += [ "-mllvm:-split-threshold-for-reg-with-hint=0" ]
         } else {
-          ldflags += [ "-Wl,-mllvm,-split-threshold-for-reg-with-hint=0" ]
+          # ldflags += [ "-Wl,-mllvm,-split-threshold-for-reg-with-hint=0" ]
         }
       }
     }
@@ -814,7 +814,7 @@ config("compiler") {
     # [0]: https://pinpoint-dot-chromeperf.appspot.com/job/16984a18be0000
     # [1]: https://pinpoint-dot-chromeperf.appspot.com/job/11984a18be0000
     # [2]: https://ci.chromium.org/ui/p/chromium/builders/try/android-binary-size/1848442
-    import_instr_limit = 30
+    import_instr_limit = 100
 
     if (is_win) {
       ldflags += [
@@ -1088,6 +1088,10 @@ config("compiler") {
 
     # We use clang-rt sanitizer runtimes.
     "-Zexternal-clangrt",
+
+    "-Ctarget-cpu=x86-64-v2",
+    "-Ctarget-feature=+avx",
+    "-Cllvm-args=-fp-contract=off",
   ]
 
   if (!is_win || force_rustc_color_output) {
@@ -1171,7 +1175,7 @@ config("libcxx_hardening") {
 # building with ThinLTO, no optimization is performed in the link step.
 config("thinlto_optimize_default") {
   if (!is_debug && use_thin_lto && is_a_target_toolchain) {
-    lto_opt_level = 0
+    lto_opt_level = 2
 
     if (is_win) {
       ldflags = [ "/opt:lldlto=" + lto_opt_level ]
@@ -1204,7 +1208,7 @@ config("thinlto_optimize_max") {
     if (thin_lto_enable_optimizations) {
       lto_opt_level = 2
     } else {
-      lto_opt_level = 0
+      lto_opt_level = 2
     }
 
     if (is_win) {
@@ -1251,7 +1255,7 @@ config("compiler_cpu_abi") {
         cflags += [ "-m64" ]
         ldflags += [ "-m64" ]
       }
-      cflags += [ "-msse3" ]
+      cflags += [ "-march=x86-64-v2", "-mavx", ]
     } else if (current_cpu == "x86") {
       if (is_clang && !is_android && !is_chromeos_device) {
         cflags += [ "--target=i386-unknown-linux-gnu" ]
@@ -2806,7 +2810,7 @@ config("optimize_max") {
   } else if (optimize_for_fuzzing) {
     cflags = [ "-O1" ] + common_optimize_on_cflags
   } else {
-    cflags = [ "-O2" ] + common_optimize_on_cflags
+    cflags = [ "-O3" ] + common_optimize_on_cflags
   }
   rustflags = [ "-Copt-level=3" ]
 }
diff --git a/chrome/common/chrome_paths_linux.cc b/chrome/common/chrome_paths_linux.cc
index 5ed55385a674a..27fe0566530fc 100644
--- a/chrome/common/chrome_paths_linux.cc
+++ b/chrome/common/chrome_paths_linux.cc
@@ -95,7 +95,7 @@ bool GetDefaultUserDataDirectory(base::FilePath* result) {
 #elif BUILDFLAG(GOOGLE_CHROME_BRANDING)
   std::string data_dir_basename = "google-chrome";
 #else
-  std::string data_dir_basename = "chromium";
+  std::string data_dir_basename = "chromium-clang";
 #endif
   *result = config_dir.Append(data_dir_basename + GetChannelSuffixForDataDir());
   return true;
diff --git a/chrome/installer/linux/common/repo.cron b/chrome/installer/linux/common/repo.cron
index 15bbf25f2b443..8b137891791fe 100755
--- a/chrome/installer/linux/common/repo.cron
+++ b/chrome/installer/linux/common/repo.cron
@@ -1,44 +1 @@
-#!/bin/sh
-#
-# Copyright 2009 The Chromium Authors
-# Use of this source code is governed by a BSD-style license that can be
-# found in the LICENSE file.
-#
-# This script is part of the @@PACKAGE@@ package.
-#
-# It creates the repository configuration file for package updates, and it
-# monitors that config to see if it has been disabled by the overly aggressive
-# distro upgrade process (e.g.  intrepid -> jaunty). When this situation is
-# detected, the respository will be re-enabled. If the respository is disabled
-# for any other reason, this won't re-enable it.
-#
-# This functionality can be controlled by creating the $DEFAULTS_FILE and
-# setting "repo_add_once" and/or "repo_reenable_on_distupgrade" to "true" or
-# "false" as desired. An empty $DEFAULTS_FILE is the same as setting both values
-# to "false".
 
-@@include@@../common/variables.include
-
-@@include@@apt.include
-
-## MAIN ##
-if [ -r "$DEFAULTS_FILE" ]; then
-  . "$DEFAULTS_FILE"
-fi
-
-install_key
-
-if [ "$repo_add_once" = "true" ]; then
-  create_sources_lists
-  RES=$?
-  # Sources creation succeeded, so stop trying.
-  if [ $RES -ne 2 ]; then
-    sed -i -e 's/[[:space:]]*repo_add_once=.*/repo_add_once="false"/' "$DEFAULTS_FILE"
-  fi
-else
-  update_bad_sources
-fi
-
-if [ "$repo_reenable_on_distupgrade" = "true" ]; then
-  handle_distro_upgrade
-fi
diff --git a/chrome/installer/linux/debian/build.sh b/chrome/installer/linux/debian/build.sh
index 09c528257d342..477ba4b24c4ee 100755
--- a/chrome/installer/linux/debian/build.sh
+++ b/chrome/installer/linux/debian/build.sh
@@ -126,7 +126,7 @@ do_package() {
   local PACKAGEFILE="${PACKAGE}-${CHANNEL}_${VERSIONFULL}_${ARCHITECTURE}.deb"
   if [ ${IS_OFFICIAL_BUILD} -ne 0 ]; then
     (cd "${TMPFILEDIR}" && ar -x "${TMPFILEDIR}/${PACKAGEFILE}")
-    xz -z9 -T0 --lzma2='dict=256MiB' "${TMPFILEDIR}/data.tar"
+    xz -z6 -e -T0 "${TMPFILEDIR}/data.tar"
     xz -z0 "${TMPFILEDIR}/control.tar"
     ar -d "${TMPFILEDIR}/${PACKAGEFILE}" control.tar data.tar
     ar -r "${TMPFILEDIR}/${PACKAGEFILE}" "${TMPFILEDIR}/control.tar.xz" \
diff --git a/chrome/installer/linux/debian/postrm b/chrome/installer/linux/debian/postrm
index 3e1cadc8296ca..0cb44dbf7ad77 100755
--- a/chrome/installer/linux/debian/postrm
+++ b/chrome/installer/linux/debian/postrm
@@ -20,17 +20,3 @@ fi
 @@include@@../common/symlinks.include
 
 remove_udev_symlinks
-
-# Only remove the defaults file if it is not empty. An empty file was probably
-# put there by the sysadmin to disable automatic repository configuration, as
-# per the instructions on the package download page.
-if [ -s "$DEFAULTS_FILE" ]; then
-  # Make sure the package defaults are removed before the repository config,
-  # otherwise it could result in the repository config being removed, but the
-  # package defaults remain and are set to not recreate the repository config.
-  # In that case, future installs won't recreate it and won't get auto-updated.
-  rm "$DEFAULTS_FILE" || exit 1
-fi
-# Remove any Google repository added by the package.
-clean_sources_lists
-uninstall_key
diff --git a/content/common/gpu_pre_sandbox_hook_linux.cc b/content/common/gpu_pre_sandbox_hook_linux.cc
index 97f7221cb1a56..ed37714df4e07 100644
--- a/content/common/gpu_pre_sandbox_hook_linux.cc
+++ b/content/common/gpu_pre_sandbox_hook_linux.cc
@@ -262,6 +262,18 @@ void AddAmdGpuPermissions(std::vector<BrokerFilePermission>* permissions) {
       "/usr/lib64/dri/r300_dri.so",
       "/usr/lib64/dri/r600_dri.so",
       "/usr/lib64/dri/radeonsi_dri.so",
+      // GPU Log Warning Workaround
+      "/usr/lib/libEGL.so.1",
+      "/usr/lib/libGLESv2.so.2",
+      "/usr/lib/libglapi.so.0",
+      "/usr/lib/dri/r300_dri.so",
+      "/usr/lib/dri/r600_dri.so",
+      "/usr/lib/dri/radeonsi_dri.so",
+      "/usr/lib/libvulkan_radeon.so",
+      "/usr/share/vulkan/icd.d",
+      "/usr/share/vulkan/icd.d/radeon_icd.x86_64.json"
+      "/etc/vulkan/icd.d",
+      "/etc/vulkan/icd.d/radeon_icd.x86_64.json"
       // Allow libglvnd files and libs.
       "/usr/share/glvnd/egl_vendor.d",
       "/usr/share/glvnd/egl_vendor.d/50_mesa.json",
diff --git a/media/base/supported_types.cc b/media/base/supported_types.cc
index 2ce29798709ef..10f5407d8dd6c 100644
--- a/media/base/supported_types.cc
+++ b/media/base/supported_types.cc
@@ -229,25 +229,12 @@ bool IsAudioCodecProprietary(AudioCodec codec) {
 #endif  // !BUILDFLAG(USE_PROPRIETARY_CODECS)
 
 bool IsDecoderHevcProfileSupported(const VideoType& type) {
-  if (!IsDecoderColorSpaceSupported(type.color_space)) {
-    return false;
-  }
-
-#if BUILDFLAG(ENABLE_PLATFORM_HEVC)
-#if BUILDFLAG(PLATFORM_HAS_OPTIONAL_HEVC_DECODE_SUPPORT)
-#if BUILDFLAG(IS_CHROMEOS)
-  if (!base::FeatureList::IsEnabled(kPlatformHEVCDecoderSupport)) {
-    return false;
-  }
-#endif  // BUILDFLAG(IS_CHROMEOS)
-  return GetSupplementalDecoderVideoProfileCache()->IsProfileSupported(
-      type.profile);
-#else
+#if BUILDFLAG(ENABLE_FFMPEG_VIDEO_DECODERS)
   return true;
-#endif  // BUIDFLAG(PLATFORM_HAS_OPTIONAL_HEVC_DECODE_SUPPORT)
 #else
-  return false;
-#endif  // BUILDFLAG(ENABLE_PLATFORM_HEVC)
+  return GetSupplementalDecoderVideoProfileCache()->IsProfileSupported(
+      type.profile);
+#endif  // BUILDFLAG(ENABLE_FFMPEG_VIDEO_DECODERS)
 }
 
 bool IsDecoderVp9ProfileSupported(const VideoType& type) {
@@ -586,7 +573,7 @@ bool IsEncoderOptionalVideoType(const media::VideoType& type) {
 
 bool IsDecoderBuiltInVideoCodec(VideoCodec codec) {
 #if BUILDFLAG(ENABLE_FFMPEG_VIDEO_DECODERS) && BUILDFLAG(USE_PROPRIETARY_CODECS)
-  if (codec == VideoCodec::kH264) {
+  if (codec == VideoCodec::kH264 || codec == VideoCodec::kHEVC) {
     return true;
   }
 #endif  // BUILDFLAG(ENABLE_FFMPEG_VIDEO_DECODERS) &&
diff --git a/media/ffmpeg/ffmpeg_common.cc b/media/ffmpeg/ffmpeg_common.cc
index 92f2cde644193..c494ea6ca88b3 100644
--- a/media/ffmpeg/ffmpeg_common.cc
+++ b/media/ffmpeg/ffmpeg_common.cc
@@ -65,7 +65,7 @@ VideoColorSpace GetGuessedColorSpace(const VideoColorSpace& color_space) {
 const char* GetAllowedVideoDecoders() {
   // This should match the configured lists in //third_party/ffmpeg.
 #if BUILDFLAG(USE_PROPRIETARY_CODECS) && BUILDFLAG(ENABLE_FFMPEG_VIDEO_DECODERS)
-  return "h264";
+  return "h264,hevc";
 #else
   return "";
 #endif
diff --git a/media/filters/ffmpeg_video_decoder.cc b/media/filters/ffmpeg_video_decoder.cc
index fef13f6b8ab58..2e967ac8c9214 100644
--- a/media/filters/ffmpeg_video_decoder.cc
+++ b/media/filters/ffmpeg_video_decoder.cc
@@ -73,7 +73,6 @@ static int GetFFmpegVideoDecoderThreadCount(const VideoDecoderConfig& config) {
     case VideoCodec::kUnknown:
     case VideoCodec::kVC1:
     case VideoCodec::kMPEG2:
-    case VideoCodec::kHEVC:
     case VideoCodec::kVP9:
     case VideoCodec::kAV1:
     case VideoCodec::kDolbyVision:
@@ -84,6 +83,7 @@ static int GetFFmpegVideoDecoderThreadCount(const VideoDecoderConfig& config) {
       NOTREACHED();
 
     case VideoCodec::kH264:
+    case VideoCodec::kHEVC:
       // Normalize to three threads for 1080p content, then scale linearly
       // with number of pixels.
       // Examples:
@@ -117,8 +117,9 @@ static void ReleaseVideoBufferImpl(void* opaque, uint8_t* data) {
 
 // static
 bool FFmpegVideoDecoder::IsCodecSupported(VideoCodec codec) {
-  // We only build support for H.264.
-  return codec == VideoCodec::kH264 && IsDecoderBuiltInVideoCodec(codec);
+  // We only build support for H.264 / H.265.
+  return (codec == VideoCodec::kH264 || codec == VideoCodec::kHEVC) &&
+         IsDecoderBuiltInVideoCodec(codec);
 }
 
 FFmpegVideoDecoder::FFmpegVideoDecoder(MediaLog* media_log)
diff --git a/media/webrtc/webrtc_features.cc b/media/webrtc/webrtc_features.cc
index c9ddc5453c80c..c8727221fea3a 100644
--- a/media/webrtc/webrtc_features.cc
+++ b/media/webrtc/webrtc_features.cc
@@ -77,14 +77,14 @@ BASE_FEATURE(kWebRtcAllowH265Receive,
 // accelerator reports support of encoding in L1T2.
 BASE_FEATURE(kWebRtcH265L1T2,
              "WebRtcH265L1T2",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+             base::FEATURE_ENABLED_BY_DEFAULT);
 
 // When enabled, allows H.265 L1T3 to be used for sending WebRTC streams, if the
 // accelerator reports support of encoding in L1T3. If this is enabled, L1T2 is
 // also implied to be enabled.
 BASE_FEATURE(kWebRtcH265L1T3,
              "WebRtcH265L1T3",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+             base::FEATURE_ENABLED_BY_DEFAULT);
 
 // When enabled, allows AV1 HW encoding to be used for WebRTC streams, if the
 // platform accelerator supports encoding of AV1.
diff --git a/ui/ozone/platform/wayland/gpu/wayland_surface_factory.cc b/ui/ozone/platform/wayland/gpu/wayland_surface_factory.cc
index 0f747b75226d4..771c777c7333e 100644
--- a/ui/ozone/platform/wayland/gpu/wayland_surface_factory.cc
+++ b/ui/ozone/platform/wayland/gpu/wayland_surface_factory.cc
@@ -247,9 +247,9 @@ GLOzone* WaylandSurfaceFactory::GetGLOzone(
 std::unique_ptr<gpu::VulkanImplementation>
 WaylandSurfaceFactory::CreateVulkanImplementation(bool use_swiftshader,
                                                   bool allow_protected_memory) {
-  LOG_IF(ERROR, !use_swiftshader)
-      << "'--ozone-platform=wayland' is not compatible with Vulkan. "
-         "Consider switching to '--ozone-platform=x11' or disabling Vulkan";
+  // LOG_IF(ERROR, !use_swiftshader)
+  //     << "'--ozone-platform=wayland' is not compatible with Vulkan. "
+  //        "Consider switching to '--ozone-platform=x11' or disabling Vulkan";
   return std::make_unique<VulkanImplementationWayland>(use_swiftshader);
 }
 #endif
